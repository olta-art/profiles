{
  "address": "0x84595971a754120C390AB2901b11f7C3d18207C9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "thumbnailURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "linkURI",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Profiles.Profile",
          "name": "profile",
          "type": "tuple"
        }
      ],
      "name": "Updated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "thumbnailURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "linkURI",
              "type": "string"
            }
          ],
          "internalType": "struct Profiles.Profile",
          "name": "profile",
          "type": "tuple"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x584bcc94f09a9266e744b99c8818da5d4b6d4c78c70a600ec66619a5bc2f6e53",
  "receipt": {
    "to": null,
    "from": "0x5712869b7C8ca52B00Af7F6D924D4C841781ccd4",
    "contractAddress": "0x84595971a754120C390AB2901b11f7C3d18207C9",
    "transactionIndex": 8,
    "gasUsed": "538158",
    "logsBloom": "0x
    "blockHash": "0x76a33bcde0bfa46c38be0b4358074c52e76e0e179d1411e428ac62beb034c2b8",
    "transactionHash": "0x584bcc94f09a9266e744b99c8818da5d4b6d4c78c70a600ec66619a5bc2f6e53",
    "logs": [
      {
        "transactionIndex": 8,
        "blockNumber": 31952028,
        "transactionHash": "0x584bcc94f09a9266e744b99c8818da5d4b6d4c78c70a600ec66619a5bc2f6e53",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005712869b7c8ca52b00af7f6d924d4c841781ccd4",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000098f425bef17c8000000000000000000000000000000000000000000000001f70b4a649c9f64388000000000000000000000000000000000000000000015d8f0d3184e52a0ed36e00000000000000000000000000000000000000000000001f701bb2240b04c708000000000000000000000000000000000000000000015d8f0dca790ae9004fee",
        "logIndex": 24,
        "blockHash": "0x76a33bcde0bfa46c38be0b4358074c52e76e0e179d1411e428ac62beb034c2b8"
      }
    ],
    "blockNumber": 31952028,
    "cumulativeGasUsed": "1498175",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d92118bdf05968493937bdacfd63c139",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"thumbnailURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"linkURI\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Profiles.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"thumbnailURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"linkURI\",\"type\":\"string\"}],\"internalType\":\"struct Profiles.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Olta\",\"kind\":\"dev\",\"methods\":{\"update((string,string,string,string))\":{\"params\":{\"profile\":\"a struct containing profile data      name: a display name for the user      description: a description about the user      thumbnailURI: a URI to a thumnail image for the user      linkURI: a URI to external profile or website\"}}},\"title\":\"Profiles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"update((string,string,string,string))\":{\"notice\":\"emits updated event with caller along with the profile calldata rate limted to once per hour\"}},\"notice\":\"This is a simple way to add profile data to the blockchain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Profiles.sol\":\"Profiles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Profiles.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\n\\n/**\\n* @title Profiles\\n* @author Olta\\n*\\n* @notice This is a simple way to add profile data to the blockchain.\\n*/\\n\\ncontract Profiles {\\n\\n    struct Profile {\\n        string name;\\n        string description;\\n        string thumbnailURI;\\n        string linkURI;\\n    }\\n\\n    event Updated(\\n        address user,\\n        Profile profile\\n    );\\n\\n    uint256 internal rate = 3600; // 1 hour\\n    mapping (address => uint) internal lastUpdated;\\n\\n    modifier rateLimit() {\\n        require(\\n            (block.timestamp - lastUpdated[msg.sender]) > rate,\\n            \\\"profiles can only be updated once per hour\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n    * @notice emits updated event with caller along with the profile calldata\\n    * rate limted to once per hour\\n    * @param profile a struct containing profile data\\n    *      name: a display name for the user\\n    *      description: a description about the user\\n    *      thumbnailURI: a URI to a thumnail image for the user\\n    *      linkURI: a URI to external profile or website\\n    */\\n    function update(Profile calldata profile)\\n        external\\n        rateLimit\\n    {\\n        require(bytes(profile.name).length         < 32,   \\\"name too long\\\");\\n        require(bytes(profile.description).length  < 512,  \\\"description too long\\\");\\n        require(bytes(profile.thumbnailURI).length < 2048, \\\"thumbnail uri too long\\\");\\n        require(bytes(profile.linkURI).length      < 2048, \\\"link uri too long\\\");\\n\\n        lastUpdated[msg.sender] = block.timestamp;\\n\\n        emit Updated(msg.sender, profile);\\n    }\\n}\",\"keccak256\":\"0x90798138b16fa180db9eaa3f6de4ae857545e954f493ad0af2bb03b8706c78e4\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080604052610e1060005534801561001657600080fd5b5061086d806100266000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806361e9e7f914610030575b600080fd5b61004a600480360381019061004591906102db565b61004c565b005b600054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261009a919061035d565b116100da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d190610414565b60405180910390fd5b60208180600001906100ec9190610443565b90501061012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610125906104f2565b60405180910390fd5b6102008180602001906101419190610443565b905010610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061055e565b60405180910390fd5b6108008180604001906101969190610443565b9050106101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf906105ca565b60405180910390fd5b6108008180606001906101eb9190610443565b90501061022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610636565b60405180910390fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6151f8148c5a61207c872af5fae3972ecdfc09c6c1123efdb7abae02caba191533826040516102a2929190610807565b60405180910390a150565b600080fd5b600080fd5b600080fd5b6000608082840312156102d2576102d16102b7565b5b81905092915050565b6000602082840312156102f1576102f06102ad565b5b600082013567ffffffffffffffff81111561030f5761030e6102b2565b5b61031b848285016102bc565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061036882610324565b915061037383610324565b9250828210156103865761038561032e565b5b828203905092915050565b600082825260208201905092915050565b7f70726f66696c65732063616e206f6e6c792062652075706461746564206f6e6360008201527f652070657220686f757200000000000000000000000000000000000000000000602082015250565b60006103fe602a83610391565b9150610409826103a2565b604082019050919050565b6000602082019050818103600083015261042d816103f1565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126104605761045f610434565b5b80840192508235915067ffffffffffffffff82111561048257610481610439565b5b60208301925060018202360383131561049e5761049d61043e565b5b509250929050565b7f6e616d6520746f6f206c6f6e6700000000000000000000000000000000000000600082015250565b60006104dc600d83610391565b91506104e7826104a6565b602082019050919050565b6000602082019050818103600083015261050b816104cf565b9050919050565b7f6465736372697074696f6e20746f6f206c6f6e67000000000000000000000000600082015250565b6000610548601483610391565b915061055382610512565b602082019050919050565b600060208201905081810360008301526105778161053b565b9050919050565b7f7468756d626e61696c2075726920746f6f206c6f6e6700000000000000000000600082015250565b60006105b4601683610391565b91506105bf8261057e565b602082019050919050565b600060208201905081810360008301526105e3816105a7565b9050919050565b7f6c696e6b2075726920746f6f206c6f6e67000000000000000000000000000000600082015250565b6000610620601183610391565b915061062b826105ea565b602082019050919050565b6000602082019050818103600083015261064f81610613565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068182610656565b9050919050565b61069181610676565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126106c3576106c26106a1565b5b83810192508235915060208301925067ffffffffffffffff8211156106eb576106ea610697565b5b6001820236038413156107015761070061069c565b5b509250929050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006107468385610709565b935061075383858461071a565b61075c83610729565b840190509392505050565b60006080830161077a60008401846106a6565b858303600087015261078d83828461073a565b9250505061079e60208401846106a6565b85830360208701526107b183828461073a565b925050506107c260408401846106a6565b85830360408701526107d583828461073a565b925050506107e660608401846106a6565b85830360608701526107f983828461073a565b925050508091505092915050565b600060408201905061081c6000830185610688565b818103602083015261082e8184610767565b9050939250505056fea264697066735822122015effc11c8277abc2241679b475e215dffad1a0f060e052cf76e44a617e0b5ce64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806361e9e7f914610030575b600080fd5b61004a600480360381019061004591906102db565b61004c565b005b600054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544261009a919061035d565b116100da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d190610414565b60405180910390fd5b60208180600001906100ec9190610443565b90501061012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610125906104f2565b60405180910390fd5b6102008180602001906101419190610443565b905010610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061055e565b60405180910390fd5b6108008180604001906101969190610443565b9050106101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf906105ca565b60405180910390fd5b6108008180606001906101eb9190610443565b90501061022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610636565b60405180910390fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6151f8148c5a61207c872af5fae3972ecdfc09c6c1123efdb7abae02caba191533826040516102a2929190610807565b60405180910390a150565b600080fd5b600080fd5b600080fd5b6000608082840312156102d2576102d16102b7565b5b81905092915050565b6000602082840312156102f1576102f06102ad565b5b600082013567ffffffffffffffff81111561030f5761030e6102b2565b5b61031b848285016102bc565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061036882610324565b915061037383610324565b9250828210156103865761038561032e565b5b828203905092915050565b600082825260208201905092915050565b7f70726f66696c65732063616e206f6e6c792062652075706461746564206f6e6360008201527f652070657220686f757200000000000000000000000000000000000000000000602082015250565b60006103fe602a83610391565b9150610409826103a2565b604082019050919050565b6000602082019050818103600083015261042d816103f1565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126104605761045f610434565b5b80840192508235915067ffffffffffffffff82111561048257610481610439565b5b60208301925060018202360383131561049e5761049d61043e565b5b509250929050565b7f6e616d6520746f6f206c6f6e6700000000000000000000000000000000000000600082015250565b60006104dc600d83610391565b91506104e7826104a6565b602082019050919050565b6000602082019050818103600083015261050b816104cf565b9050919050565b7f6465736372697074696f6e20746f6f206c6f6e67000000000000000000000000600082015250565b6000610548601483610391565b915061055382610512565b602082019050919050565b600060208201905081810360008301526105778161053b565b9050919050565b7f7468756d626e61696c2075726920746f6f206c6f6e6700000000000000000000600082015250565b60006105b4601683610391565b91506105bf8261057e565b602082019050919050565b600060208201905081810360008301526105e3816105a7565b9050919050565b7f6c696e6b2075726920746f6f206c6f6e67000000000000000000000000000000600082015250565b6000610620601183610391565b915061062b826105ea565b602082019050919050565b6000602082019050818103600083015261064f81610613565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068182610656565b9050919050565b61069181610676565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126106c3576106c26106a1565b5b83810192508235915060208301925067ffffffffffffffff8211156106eb576106ea610697565b5b6001820236038413156107015761070061069c565b5b509250929050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006107468385610709565b935061075383858461071a565b61075c83610729565b840190509392505050565b60006080830161077a60008401846106a6565b858303600087015261078d83828461073a565b9250505061079e60208401846106a6565b85830360208701526107b183828461073a565b925050506107c260408401846106a6565b85830360408701526107d583828461073a565b925050506107e660608401846106a6565b85830360608701526107f983828461073a565b925050508091505092915050565b600060408201905061081c6000830185610688565b818103602083015261082e8184610767565b9050939250505056fea264697066735822122015effc11c8277abc2241679b475e215dffad1a0f060e052cf76e44a617e0b5ce64736f6c63430008090033",
  "devdoc": {
    "author": "Olta",
    "kind": "dev",
    "methods": {
      "update((string,string,string,string))": {
        "params": {
          "profile": "a struct containing profile data      name: a display name for the user      description: a description about the user      thumbnailURI: a URI to a thumnail image for the user      linkURI: a URI to external profile or website"
        }
      }
    },
    "title": "Profiles",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "update((string,string,string,string))": {
        "notice": "emits updated event with caller along with the profile calldata rate limted to once per hour"
      }
    },
    "notice": "This is a simple way to add profile data to the blockchain.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 21,
        "contract": "contracts/Profiles.sol:Profiles",
        "label": "rate",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/Profiles.sol:Profiles",
        "label": "lastUpdated",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}